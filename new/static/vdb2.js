var _db={n:'_vdb',iDB:window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB,}
_db.rc=function(e){let db=e.target.result;let o=db.createObjectStore(_db.n,{keyPath:'keyID'});};_db.get=(id)=>{return new Promise(function(resolve,reject){let dbReq=_db.iDB.open(_db.n,1)
dbReq.onerror=(e)=>{reject(Error(e.target.error.message))};dbReq.onupgradeneeded=(e)=>{_db.rc(e);e.target.transaction.abort();reject(Error('object store Not found'));}
dbReq.onsuccess=(event)=>{var db=event.target.result;var tr=db.transaction(_db.n);var obj=tr.objectStore(_db.n);var oreq=obj.get(id);oreq.onerror=(e)=>{reject(Error(e.target.error.message))};oreq.onsuccess=function(event){if(oreq)resolve(oreq.result);else reject(Error('object not found'));};};});};_db.put=(object)=>{return new Promise(function(resolve,reject){let dbReq=_db.iDB.open(_db.n,1);
dbReq.onerror=function(e){reject(Error(e.target.error.message))};dbReq.onupgradeneeded=_db.rc;dbReq.onsuccess=function(event){let db=event.target.result;let tr=db.transaction(_db.n,'readwrite');let obj=tr.objectStore(_db.n);console.log('obj data:'+object);let oreq=obj.put(object);oreq.onerror=(e)=>{reject(Error(e.message))};oreq.onsuccess=(e)=>{resolve(e.message);};};});}